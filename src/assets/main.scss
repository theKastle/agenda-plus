/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * 
 */
@tailwind preflight;

/**
  * This injects any component classes registered by plugins.
  *
  * If using `postcss-import`, use this import instead:
  *
  *
  */
@tailwind components;

/**
  * Here you would add any of your custom component classes; stuff that you'd
  * want loaded *before* the utilities so that the utilities could still
  * override them.
  *
  * Example:
  *
  * .btn { ... }
  * .form-input { ... }
  *
  * Or if using a preprocessor or `postcss-import`:
  *
  * @import "components/buttons";
  * @import "components/forms";
  */

/**
  * This injects all of Tailwind's utility classes, generated based on your
  * config file.
  *
  * If using `postcss-import`, use this import instead:
  *
  * 
  */
@tailwind utilities;

/**
  * Here you would add any custom utilities you need that don't come out of the
  * box with Tailwind.
  *
  * Example :
  *
  * .bg-pattern-graph-paper { ... }
  * .skew-45 { ... }
  *
  * Or if using a preprocessor or `postcss-import`:
  *
  * @import "utilities/background-patterns";
  * @import "utilities/skew-transforms";
  */

@mixin strike-center {
  text-decoration: line-through;
}

$tags: (
  yellow: #ffe014,
  red: #ff4f44,
  green: #3ce155,
  blue: #148eff,
  grey: #a2a2a7
);

body {
  height: 100vh;
  font-size: 14px;
  overflow: auto;
  @apply bg-black;
}

.input-text {
  @apply w-full p-2 bg-grey-darker rounded-sm;

  &__input {
    @apply w-full bg-grey-darker text-white;

    &:focus {
      outline: none;
    }
  }
}

.todo-item {
  @apply text-white w-full flex items-center py-3 px-2 flex-wrap max-w-full;

  @each $tagKey, $tagColor in $tags {
    &--#{$tagKey} {
      border-color: $tagColor;
      @apply border-l-4;
    }
  }

  &--completed {
    @apply text-grey-darker;
  }

  .trash {
    @apply bg-black;
  }

  &--current-selected {
    @apply bg-grey-dark;

    .trash {
      @apply bg-grey-dark;
    }
  }

  &:hover {
    .trash {
      display: block;
    }
  }

  &__input {
    @apply bg-grey-dark w-full text-white outline-none leading-none;
  }
}

.todo-checkbox {
  min-width: 1.25rem;
  min-height: 1.25rem;
  border-radius: 50%;
  position: relative;
  @apply border border-grey-darker mx-2 mt-1;

  &--completed {
    &::before {
      position: absolute;
      content: "";
      width: 1rem;
      height: 1rem;
      border-radius: 50%;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      @apply border border-grey-darker;
      @apply bg-grey-darker;
    }
  }
}

.trash {
  display: none;
}

.todo-title {
  overflow: hidden;
  @apply flex-grow flex-shrink px-3 justify-between;

  &__text {
    line-height: 1.5;

    &--completed {
      @include strike-center();
      @apply text-grey-darker;
    }
  }
}

.CodeMirror {
  height: 100%;
}

.CodeMirror-hints {
  max-height: 20em;
  @apply bg-blue-darkest absolute z-10 overflow-hidden list-reset p-0 font-mono text-sm overflow-y-auto .rounded-none border-0;
}

.CodeMirror-hint {
  @apply m-0 leading-normal whitespace-pre cursor-pointer text-grey-darker .rounded-none;
}

li.CodeMirror-hint-active {
  @apply text-grey-darker bg-blue-lighter;
}

::-webkit-scrollbar {
  background-color: #2b2b2b;
  border-left: 1px solid #3e3e3e;
  width: 0.65rem;
}

::-webkit-scrollbar-thumb {
  background: #6b6b6b;
  border-radius: 10px;
}

.no-drag {
  -webkit-app-region: no-drag;
}

.tab-plus {
  transition: transform 50ms ease-out;

  &:hover {
    opacity: 0.8;
  }
}

.tab {
  @apply relative;

  &--active {
    @apply bg-grey-darkest border-r-0;

    &::after {
      content: "";
      width: 100%;
      height: 3px;
      position: absolute;
      bottom: -1px;
      left: 0;
      @apply z-50 bg-green-dark;
    }
  }
}

.tab-expand,
.tab-expand > .tab__text {
  transform-origin: left top;
  animation-fill-mode: both;
}

.tab-expand {
  overflow: hidden;
  will-change: transform;
  contain: content;
  animation-name: tab-expand;
  animation-duration: 100ms;
  animation-timing-function: step-end;
}

.tab-expand > .tab__text {
  will-change: transform;
  contain: content;
  animation-name: tab-expandInverse;
  animation-duration: 100ms;
  animation-timing-function: step-end;
}

@keyframes tab-expand {
  0% {
    transform: scaleX(0);
  }
  20% {
    transform: scaleX(0.30837);
  }
  40% {
    transform: scaleX(0.57088);
  }
  60% {
    transform: scaleX(0.78514);
  }
  80% {
    transform: scaleX(0.93772);
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes tab-expandInverse {
  0% {
    transform: scaleX(1000);
  }
  20% {
    transform: scaleX(3.24286);
  }
  40% {
    transform: scaleX(1.75168);
  }
  60% {
    transform: scaleX(1.27366);
  }
  80% {
    transform: scaleX(1.06642);
  }
  100% {
    transform: scaleX(1);
  }
}

.avenir-white-theme {
  body {
    font-family: "Avenir Next", Helvetica, Arial, sans-serif;
    padding: 1em;
    margin: auto;
    max-width: 42em;
    background: #fefefe;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-weight: bold;
  }

  h1 {
    color: #000000;
    font-size: 28pt;
  }

  h2 {
    border-bottom: 1px solid #cccccc;
    color: #000000;
    font-size: 24px;
  }

  h3 {
    font-size: 18px;
  }

  h4 {
    font-size: 16px;
  }

  h5 {
    font-size: 14px;
  }

  h6 {
    color: #777777;
    background-color: inherit;
    font-size: 14px;
  }

  hr {
    height: 0.2em;
    border: 0;
    color: #cccccc;
    background-color: #cccccc;
  }

  p,
  blockquote,
  ul,
  ol,
  dl,
  li,
  table,
  pre {
    margin: 15px 0;
  }

  img {
    max-width: 100%;
  }

  table {
    border-collapse: collapse;
    width: 100%;
  }

  table,
  th,
  td {
    border: 1px solid #eaeaea;

    border-radius: 3px;
    padding: 5px;
  }

  tr:nth-child(even) {
    background-color: #f8f8f8;
  }

  a,
  a:visited {
    color: #4183c4;
    background-color: inherit;
    text-decoration: none;
  }

  #message {
    border-radius: 6px;
    border: 1px solid #ccc;
    display: block;
    width: 100%;
    height: 60px;
    margin: 6px 0px;
  }

  button,
  #ws {
    font-size: 10pt;
    padding: 4px 6px;
    border-radius: 5px;
    border: 1px solid #bbb;
    background-color: #eee;
  }

  code,
  pre,
  #ws,
  #message {
    font-family: Monaco, monospace;
    font-size: 10pt;
    border-radius: 3px;
    background-color: #f8f8f8;
    color: inherit;
  }

  code {
    border: 1px solid #eaeaea;
    margin: 0 2px;
    padding: 0 5px;
  }

  pre {
    border: 1px solid #cccccc;
    overflow: auto;
    padding: 4px 8px;
  }

  pre > code {
    border: 0;
    margin: 0;
    padding: 0;
  }

  #ws {
    background-color: #f8f8f8;
  }

  .send {
    color: #77bb77;
  }
  .server {
    color: #7799bb;
  }
  .error {
    color: #aa0000;
  }
}

.content-box {
  box-sizing: content-box;
}

.tab-group {
  &::-webkit-scrollbar {
    display: none;
  }
}

.tab-bar {
  @apply relative;

  &::after {
    content: "";
    width: 100%;
    height: 3px;
    position: absolute;
    bottom: -1px;
    left: 0;
    @apply z-10 bg-blue-dark;
  }
}

.resize-border {
  padding-left: 2px;
  cursor: col-resize;
  @apply border-l-2 border-black;
}

.pointer-resize {
  cursor: col-resize;
}

$tags: (
  yellow: #ffe014,
  red: #ff4f44,
  green: #3ce155,
  blue: #148eff,
  grey: #a2a2a7
);

.tags-list {
  height: 2rem;
  top: 20px;
  right: 20px;
  overflow: hidden;
  transition: height 250ms ease-out;
  @apply bg-grey-light rounded-lg z-20;

  &:hover {
    height: 8rem;
  }
}

.tag {
  width: 1rem;
  height: 1rem;
  @apply rounded-full m-2 cursor-pointer;

  @each $tagKey, $tagColor in $tags {
    &--#{$tagKey} {
      background-color: $tagColor;
    }
  }
}

.tag-indicator {
  $size: 6px;
  width: $size;
  height: $size;
  min-width: $size;
  @apply rounded-full m-2;

  @each $tagKey, $tagColor in $tags {
    &--#{$tagKey} {
      background-color: $tagColor;
    }
  }
}

.max-w-80-vw {
  max-width: 80vw;
}
